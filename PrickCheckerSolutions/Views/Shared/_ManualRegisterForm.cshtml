@model PrickCheckerSolutions.Models.RegisterViewModel

@using (Html.BeginForm("Register", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "red-text" })

    <div class="row">
        <div class="col s12 m12 l12">
            <h4 class="light">
                Register
            </h4>
        </div>

        <div class="input-field col s12 m12 l12">
            @Html.TextBoxFor(model => model.Username, new { @class = "validate", @placeholder = "username", @id = "txt_register_usernamme", @type = "text" })
        </div>

        <div class="input-field col s12 m12 l12">
            @Html.TextBoxFor(model => model.Email, new { @class = "validate", @placeholder = "email", @id = "txt_register_email", @type = "email" })
        </div>

        <div class="input-field col s12 m12 l12">
            @Html.PasswordFor(model => model.Password, new { @class = "validate", @placeholder = "password", @id = "txt_register_password", @type = "password" })
        </div>

        <div class="input-field col s12 m12 l12">
            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "validate", @placeholder = "confirm password", @id = "txt_register_confirmpassword", @type = "password" })
        </div>

        <div class="input-field col s12 m12 l12">
            <div class="row">
                <div class="col s6 m6 l6">
                    <button type="submit" class="waves-effect waves-light btn blue">
                        Register
                    </button>
                </div>
                <div class="col s6 m6 l6" id="updateTarget">
                </div>
            </div>

        </div>


    </div>
}

